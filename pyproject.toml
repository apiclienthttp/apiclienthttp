[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "api-client-http"
version = "1.1.0"
description = "Client for sync/async query HTTP API Services"
readme = "README.md"
requires-python = ">=3.11,<4.0"
authors = [{ name = "Igor Voropaev", email = "snakework10@gmail.com" }]
dependencies = ["httpx ~= 0.28"]

[project.urls]
repository = "https://github.com/apiclienthttp/apiclienthttp"

# -- Poetry --
[tool.poetry]
packages = [{ include = "apiclienthttp" }]

[tool.poetry.dependencies]


[tool.poetry.group.linter.dependencies]
ruff = "^0.9.1"
mypy = "^1.14.1"
vulture = "^2.14.0"

# -- ruff --
[tool.ruff]
line-length = 135
preview = true

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    "ASYNC",
    "ASYNC1",
    "S",
    "BLE",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EXE",
    "ISC",
    "ICN",
    "G",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "INT",
    "ARG",
    "PTH",
    "TD",
    "FIX",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    "NPY",
    "AIR",
    "PERF",
    "FURB",
    "LOG",
    "RUF",
]
ignore = [
    "COM812",
    "ISC001",
    "TRY003",
    "PT013",
    "TID252",
    "RUF001",
    "RUF002",
    "RUF003",

]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "typings",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"typings" = ['typing', 'typing_extensions']

[tool.ruff.lint.pylint]
max-args = 15
max-returns = 10
max-branches = 30

# -- MyPy --
[tool.mypy]
ignore_missing_imports = true
exclude = ["__samples__"]

[[tool.mypy.overrides]]
module = "users.api_v1"
disable_error_code = "override"

# -- Vulture --
[tool.vulture]
exclude = [".vscode/", "__samples__/"]

# -- PyTest --
[tool.coverage.run]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = ["pragma: no cover", "def __repr__", "def __str__"]
